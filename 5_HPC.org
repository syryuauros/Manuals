#+SETUPFILE: 1Emacs.cf

| 클러스터링 | 고계산용 HPC(High Performance) = Beowulf | 부하분산용 LVS(Linux Virtual Server) | 고가용성 HA(High Availability) |

| 노드 연결(네트웍) | 스위칭 허브(1G, 10G) | 인피니밴드(infiniBand) |

| 각 노드(pc)에 OS(linux) 설치 | OpenMPI 설치 |

| PATH, Master에서 hosts 잡기 | ssh-key 취합/배포 | 작업공간 nfs로 마운트 |

* netboot, pixiecore, ipxe
| * overall concept              | [[https://github.com/danderson/netboot/blob/master/pixiecore/README.booting.md][link]]                                                |
| * old manual(Tinycore for x86) | [[https://gitlab.com/daveanderson/pixiecore][link]]                                                |
| * Tinycore src for x86_64      | [[http://tinycorelinux.net/6.x/x86_64/release/distribution_files/][link]]                                                |
| * pixiecore boot               | $ sudo [...]pixiecore boot [kernel] [initrd] [flag] |
|                                |                                                     |

$ nix build .#pixiecore .#wakeonlan .#syslinux .#mtools .#cpio .#dosfstools

$ wget http://tinycorelinux.net/6.x/x86_64/release/distribution_files/{vmlinuz64,modules64.gz,corepure64.gz,rootfs64.gz}

$ sudo ./pixiecore/bin/pixiecore boot vmlinuz64 corepure64.gz rootfs64.gz modules64.gz --dhcp-no-bind -d -p80

$ ./wakeonlan/bin/wakeonlan -p 8 54:05:DB:DC:4C:9D


* WOL(Wake On Lan)    [[https://7508.tistory.com/2070][link]]
| ./wakeonlan/bin/wakeonlan -p 8 54:05:DB:DC:4C:9D     | 8번 포트로 mac ID 54:...인 매직 패킷을 보냄 |
|                                                 |                                             |

* booting USB(syslinux) [[https://www.debian.org/releases/etch/i386/ch04s04.html.ko][link]]   [[https://nixos.wiki/wiki/NixOS_Installation_Guide/Manual_USB_Creation][link2]]
| boot loader   | SYSLINUX(ldlinux.sys), LILO        | [[https://www.debian.org/releases/etch/i386/ch04s04.html.ko#usb-copy-easy][link]]             |
| kernel binary | vmlinuz                            | [[https://mirrors.edge.kernel.org/pub/linux/utils/boot/syslinux/][link]]             |
| initrd.gz     | or initramfs(cpio archives)        | [[https://wiki.debian.org/Initrd][link]] [[https://www.kernel.org/doc/html/latest/admin-guide/initrd.html][link2]]       |
| initramfs     | improved initrd (above kernel 2.4) | [[https://wiki.gentoo.org/wiki/Initramfs/Guide/ko][link]] [[https://intrepidgeeks.com/tutorial/manufacturing-method-of-initramfs][link2]] [[https://velog.io/@markyang92/initramfs][link3]] |
| syslinux.cfg  | syslinux 설정파일                  |                  |
| additional    | additional modules                 |                  |
|               |                                    |                  |

syslinux archive down: $ wget https://mirrors.edge.kernel.org/pub/linux/utils/boot/syslinux/syslinux-5.10.tar.gz
https://velog.io/@markyang92/kernel

| * usb format                  | $ mkfs.fat -n USB -v /dev/sdc1                             | [[https://wnw1005.tistory.com/426][link]] |
| * generate DOS file system    | # ./home/auros/gits/pxe/dosfstools/bin/mkdosfs /dev/sdc1   | [[https://www.debian.org/releases/etch/i386/ch04s04.html.ko][link]] |
| * install ldlinux(bootloader) | # ./home/auros/gits/pxe/Syslinux/bin/syslinux /dev/sdc1    |      |
| * usb mount                   | # mount /dev/sdc1 /mnt                                     |      |
| * move to pxe                 | # cd [...pxe]                                              |      |
| * kernel initrd files copy    | # cp vmlinuz64 corepure64.gz rootfs64.gz modules64.gz /mnt |      |
| * generate syslinux.cfg       | # cat > ~/mnt/syslinux.cfg                                 |      |
| syslinux.cfg contents         | default vmlinuz                                            |      |
|                               | append initrd=initrd.gz                                    |      |
|                               | C-d to end                                                 |      |
| * usb(sdc1) unmount           | # umount /mnt  or # umount /dev/sdc1                       |      |
|                               |                                                            |      |

| * find mount inform | # findmnt or mount -l | [[https://www.lesstif.com/system-admin/findmnt-93127532.html][link]] |
|                     | # findmnt [device] -D |      |

* installing nixos
|                                          | [[https://nixos.wiki/wiki/Bootloader][link]]           |
| * get bzImage initrd netboot.ipxe(=init) | [[https://nixos.org/manual/nixos/stable/index.html#sec-installation-additional-notes][link-2.5.2 PXE]] |

| $  nix-build -A netboot.x86_64-linux '<nixpkgs/nixos/release.nix>' |

* command for install nixos through pixiecore
| $ sudo [...pixiecore]/pixiecore boot [...bzImage]/bzImage [...initrd]/initrd --cmdline "init=[netboot.ipxe file 내부에서 'init='으로 시작하는 구문, 즉 init(initrd와는 다르다.) 파일의 위치]" [flag] |

| $ sudo ~/gits/pxe/pixiecore/bin/pixiecore boot bzImage initrd --cmdline "init=/nix/store/x6rxs500w67bvbs5g25z7vsqn67865jd-nixos-system-nixos-21.05beta-160507.gfedcba/init loglevel=4" --debug --dhcp-no-bind --port 64172 --status-port 64172 | [[https://nixos.wiki/wiki/Netboot][link]] | bzImage, initrd 가 있는 폴더에서|

| $ sudo ~/gits/pxe/pixiecore/bin/pixiecore boot ~/gits/pxe/netboot_media/bzImage ~/gits/pxe/netboot_media/initrd --cmdline "init=/nix/store/x6rxs500w67bvbs5g25z7vsqn67865jd-nixos-system-nixos-21.05beta-160507.gfedcba/init loglevel=4" --debug --dhcp-no-bind --port 64172 --status-port 64172 | 아무 폴더에서나 실행 가능한 명령 |

| * ssh connect   | $ ssh user@IP    | $ ssh nixos@192.168.0.2  | [[https://hei-jung.github.io/linux/linux-remote-access/][link]]             |
| * stfp connect  | $ sftp user@IP   | $ sftp nixos@192.168.0.2 | [[https://dejavuqa.tistory.com/359][link1]]   [[https://jjeongil.tistory.com/1422][link2]]    |
| remote folder   | sftp> pwd        | sftp> ls -lah            |                  |
| local folder    | sftp> lpwd       | sftp> lls -lah           | l+remote command |
| local >> remote | sftp> put [file] |                          |                  |


* installing nixos by nix flake (dhpc_test)
| * nix flake execute  | $ nix run .#run-pixiecore |
| * after installation | $ ssh nixos@192.168.0.2   |
|                      |                           |


* bootable usb with nixos image(ISO)
| * usb format                  | [[https://jjeongil.tistory.com/1769][link]]                                               |            |
| * nixos bootable usb making   | [[https://nix.dev/tutorials/building-bootable-iso-image][link]]  [[https://hoverbear.org/blog/nix-flake-live-media/][link2]]  [[https://github.com/NixOS/nix/issues/5880][link3]]                                 |            |
| * make bootable usb by flake  | $ nix build .#auto-usb                             | [[https://github.com/haedosa/declarative-hpc/blob/pxeboot/pixiecore-experiment/flake.nix][link]]       |
|                               | $ dd if=[...iso]/~.iso of=/dev/sdz status=progress | [[https://nixos.org/manual/nixos/stable/index.html#sec-installation-additional-notes][link]] [[https://nix.dev/tutorials/building-bootable-iso-image][link2]] |
| have to unmount all partition | $ umount /dev/sdc1                                 |            |


* backup for nixos install through pixiecore
| $ grep -ohP 'init=\S+' ./netboot_media/netboot.ipxe                                               |
|                                                                                                   |
| init=/nix/store/x6rxs500w67bvbs5g25z7vsqn67865jd-nixos-system-nixos-21.05beta-160507.gfedcba/init |
|                                                                                                   |
| <nixpkgs/nixos/release.nix>                                                                       |
| <nixpkgs/nixos/modules/installer/cd-dvd/install-cd-graphical-gnome.nix>                           |
|                                                                                                   |

* Windows on nixos
| * windows install with qemu | [[https://stackframe.tistory.com/28?category=849329][link]] |
| * check cpu, core           | [[https://4lugin.tistory.com/148][link]] |
|                             |      |

| $ ~/gits/qemus/result/bin/qemu-system-x86_64 -m 4G -cpu host -smp sockets=1,cores=2,threads=2 -cdrom Win10_21H2_Korean_x64.iso -drive file=windows.raw,format=raw -enable-kvm | 최초 설치 |

| $ ~/gits/qemus/result/bin/qemu-system-x86_64 -m 4G -enable-kvm -cpu host -smp sockets=1,cores=2,threads=2 -drive file=windows.raw,format=raw -soundhw all | 설치된 windows 실행 |



* getting kernel [[https://www.cyberciti.biz/tips/compiling-linux-kernel-26.html][link]]

* kernel position
| * kernel  | /run/booted-system/kernel-modules/modules/[version number]/kernel/ | [[https://velog.io/@markyang92/kernel][link]] |
| * bZImage | [...kernel]                                                        |      |

* references
| * GPT MBR                          | [[https://www.easeus.co.kr/partition-manager-software/mbr-vs-gpt.html][link]]         |
| * GRUB2 for MBR & GPT in one usb   | [[https://devbin.kr/grub2-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A7%8C%EB%8A%A5-usb-%EB%A7%8C%EB%93%A4%EA%B8%B0-windows-installer-%EB%93%B1/][link]]         |
| * bootloaders                      | [[http://no1linux.org/hottips/22876][link]]         |
| * GPT2                             | [[https://lascrea.tistory.com/40][link]]         |
| * systemd-boot                     | [[https://stackframe.tistory.com/32][link]]  [[https://forcecore.tistory.com/1322][link]]   |
| * about systemd                    | [[https://www.kernelpanic.kr/17][link]]         |
| * systemd systemctl                | [[https://hedone21.tistory.com/18][link]]         |
| * bootable usb prepare             | [[http://knoppix.net/wiki/Bootable_USB_Key][link]]         |
| * fdisk, disk manager              | [[https://thornelabs.net/posts/create-a-bootable-windows-7-or-10-usb-drive-in-linux/][link]]         |
| * tmux                             | [[https://velog.io/@ur-luella/tmux-%EC%82%AC%EC%9A%A9%EB%B2%95][link]]         |
| * ssh remote connect               | [[https://hei-jung.github.io/linux/linux-remote-access/][link]]         |
| * sftp                             | [[https://jjeongil.tistory.com/1422][link1]]  [[https://dejavuqa.tistory.com/359][link2]] |
| * curl                             | [[https://hbase.tistory.com/224][link]]         |
| * wget                             | [[https://www.lesstif.com/lpt/linux-command-line-http-wget-95879932.html][link]]         |
| * telnet IP PORT, /dev/tcp/IP/PORT | [[https://uutopia.tistory.com/41][link]]         |
| * socket command                   | [[https://jaynamm.tistory.com/entry/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A0%95%EB%A6%AC][link]]         |
|                                    |              |



| * infiniBand                       | [[https://m.blog.naver.com/skauter/10169437853][link]]         |
| * series, parallel interface       | [[https://velog.io/@ckstn0777/%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B5%AC%EC%A1%B0-%EC%A7%81%EB%A0%AC%ED%86%B5%EC%8B%A0%EA%B3%BC-%EB%B3%91%EB%A0%AC%ED%86%B5%EC%8B%A0][link]]         |
|                                    |              |
