#+SETUPFILE: 1Emacs.cfg

* using starship prompt
https://starship.rs/guide/#%F0%9F%9A%80-installation
| $eval "$(starship init bash)"            |
| configuration:   ~/.config/starship.toml |

* how to find command and short-cut

https://naghdbishi.ir/Doom-Emacs-Cheat-Sheet/README.html

https://people.ast.cam.ac.uk/~vasily/idl/emacs_commands_list.html

#+NAME: fig:1
[[./img/1_emacs/1.png]]

* markdown(md file)
| [[https://hongsii.github.io/2017/06/01/How-to-Write-with-Markdown/][link]] |

* Vi mode (default control)
[[https://www.youtube.com/watch?v=cY0JxzENBJg][link-video]]

| esc                          | i             | v           | :                                    |
|------------------------------+---------------+-------------+--------------------------------------|
| default 상태                 | 입력모드      | 선택모드    | 명령어모드                           |
| l(or right) 한 칸 이동       | 키보드 입력   | esc와 동일  | :w 저장                              |
| h(or left) 한 칸 뒤로 이동   |               | esc와 동일  | :q 끝내기                            |
| j(or down) 아래로 한 줄 이동 |               | esc와 동일  | :wq or :x 저장 후 끝내기             |
| k(or up) 위로 한 줄 이동     |               | esc와 동일  | :q! 강제 종료                        |
| w(or e) 한 단어 앞으로 이동  |               | esc와 동일  | :w /path/file_name 다른이름으로 저장 |
| b 한 단어 뒤로 이동          |               | esc와 동일  |                                      |
| ) 한 문장 앞으로 이동        |               | esc와 동일  |                                      |
| } 한 문단 앞으로 이동        |               | esc와 동일  |                                      |
| y 선택영역 복사              |               | esc와 동일  |                                      |
| yy 한 줄 복사                |               | yy 없음     |                                      |
| p 붙여넣기                   |               | esc와 동일  |                                      |
| d 선택영역 잘라내기          |               | esc와 동일  |                                      |
| dd 한 줄 잘라내기            |               | dd 없음     |                                      |
| u 실행 취소(undo)            |               | esc와 동일  |                                      |
| ctrl-r 다시 실행(redo)       |               | esc와 동일  |                                      |
| ctrl-h t 테마설정(nova)      | material-dark | tokyo-night | opera                                |


| themes blue  | nova, misterioso, oceanic-next                      |
| themes black | material-d, manoj-d, doom-dark+, tokyo-night, ayu-d |
| themes gray  | plain-d                                             |
| theme etc    | tango-d, monokai-machine(green), tsdh-d(brown)      |
|              | fairy-floss, moonlight(purple)                      |

* Comment (M x comment-line)
| C-x, C-; |

* Windows (spc w, M x window)
#+STARTUP: align
| 새로 생성 | s | v | n       |   |   |   |   |   |
| 창 이동   | h | j | k       | l | b | t | r | R |
| 배열 변경 | H | J | K       | L |   |   |   |   |
| 크기 조정 | = | _ | shift-\ | o |   |   |   |   |
| 창 닫기   | c | d | q       |   |   |   |   |   |


* Buffer (spc b, M x buffer)
| 버퍼이동       | [ or p        | ] or n         | b 목록에서 선택  | B b의 확장판           | l 마지막 버퍼    |
| 버퍼생성/킬    | C 새창에 복사 | d 현재 버퍼 킬 | K 모든 버퍼 킬   | O 현재 버퍼 제외 올 킬 | s 현재 버퍼 저장 |
| spc b i (목록) | m 마크        | u 언마크       | t 모든 버퍼 마크 | D  선택된 버퍼 킬      | q 나가기         |

* Code내부 명령 - 문서 상 기록된 내용을 추적 (spc c, g, M x +lookup )
| spc c | d | D | i | k |   |
| g     | f | d | D | I | A |
|       |   |   |   |   |   |

* Dired mode(spc ., M x dired)
| ^ 한 단계 위로 | + 새 폴더 만들기                 | R 이름 변경 , 경로 지정 | m 마크      | u 언마크            |
| d 지우기 마크  | x 지우기 마크된 파일/폴더 지우기 | D 바로 지우기           | M 이동 모드 | C 다른이름으로 저장 |

* Command(M x or spc :)
| ansi-term                                               | term | shell |
| 터미널 위치에서 'spc o -' 현재 위치가 dired mode로 열림 |      |       |

* magit (spc g)
**  basic command
| 'g' = git status | '/' or 'g C-c C-c'  dispatch mode |
**  시작(remote-repository를 local에 복사, git clone)
| dired mode에서 상위 폴더에 위치 (home/git_test/를 연동시키려면 home/에 위치) | 'C u url주소(C-v로 가능)' =  git clone <url> |
**  시작( local을 remote-repository에 복사, git init)
| dired mode에서 원하는 폴더에 위치 (home/git_test/를 연동시키려면 home/git_test에 위치) | '/ I' = git init |
| '/ M a' = git remote add <Remote name> <url>                                           |                  |
**  staging(git add)
| 'g s' = 선택항목 staging | 'g S'= 전체변경사항 staging |
**  commit(git commit -m)
| 'g C-c C-c c c <메세지> C-c C-c' |
**  push(git push)
| 'g C-c C-c P u' or 'spc g / P u' |
** git ignore
| make .gitignore >> git push | [[https://programming119.tistory.com/105][link1]] |
|                             |       |

#+NAME: fig:1
[[./img/git_structure.png]]
#+NAME: fig:2
[[./img/branch_structure.png]]

https://velog.io/@csy9604/%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC
https://git-scm.com/book/ko/v2/Git%EC%9D%98-%EA%B8%B0%EC%B4%88-Git-%EC%A0%80%EC%9E%A5%EC%86%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0

* org mode
| C-c C-e 파일 extract | * TAB 헤드 타이틀 생성 |
