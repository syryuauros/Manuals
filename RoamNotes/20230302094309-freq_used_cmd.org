:PROPERTIES:
:ID:       CD511543-4125-43D6-A902-BC1FF1E0B559
:END:
#+title: freq-used-cmd

* Display
| opacity control in emacs  | :: | M-x doom/set-frame-opacity               |   |
| windows opacity control   | :: | picom -cf -i 0.8 --use-ewmh-active-win & |   |
| show hide folder in dired | :: | S-h                                      |   |
| command history           | :: | C-r                                      |   |

* edit (vim, emacs)
| find & change    | :: | :%s/[word-to-find]/[word-target-for-changed]                     |                 |
|                  | :: | :%s/[word-to-find]/[word-target-for-changed]/c                   | for checking    |
|                  | :: | select range -> :`<,`>s/[word-to-find]/[word-target-for-changed] | for a range     |
|                  |    |                                                                  |                 |
| key binding      | :: | M-x describe key                                                 | confirm key     |
|                  | :: | M-x global set key, global unset key                             | set key binding |
|                  |    | (if key binding is already exist then documentation appears)     |                 |
|                  |    | (pre-fix like C-r or M-r must needed)                            |                 |
| move to scope    | :: | M-x +lookup/(definition, reference, file)                        |                 |
| prev/next buffer | :: | M-x previous-buffer, next-buffer                                 |                 |
|                  |    |                                                                  |                 |

* edit
| process kill | :: | $ pkill [process name]  or $ kill -9 [process number] |
| vim tutorial | :: | $ vimtutor                                            |
|              |    |                                                       |
* system

* searching
| ls /nix/store [pl] grep [word] [pl] ws -l |    |                                         |
| echo ${}                                  | :: | tab tab cursor inside the curly bracket |
|                                           |    |                                         |

* remote connect
| xpra server start              | :: | $ xpra start :100 --start=xterm                                                                      |
| xpra remote server start       | :: | $ xpra start ssh://USER@HOST/ --start=xterm  https://github.com/Xpra-org/xpra#installation           |
| xpra attach (display in local) | :: | $ xpra attach ssh://USER@HOST/                                                                       |
|                                | :: | $ xpra attach tcp://IP:port                                                                          |
| vnc view                       | :: | $ vncviewer -geometry auto 192.168.13.40                                                             |
| scp                            | :: | $ scp -r auros@192.168.12.135:/home/auros/Downloads/test.jpg(file to send) ./Downloads(recieve path) |
| ssh jump                       | :: | $ ssh -J USER1@IP1(connecting PC) USER2@IP2(final target)                                            |
|                                |    |                                                                                                      |
| org-roam-ui in remote(xpra)    | :: | $ firefox localhost:35901                                                                            |
|                                |    |                                                                                                      |
